         PRINT ON
* SORRY...NO WARRANTY BUT QUESTIONS OR INQUIRIES CAN BE
* DIRECTED TO: SEBASTIANÂ§WELTON.DE
*              WWW.WELTON.DE
QWKF     CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SAVE  (14,12)                            STANDARD H/K
         LR    R12,R15                            STANDARD H/K
         USING QWKF,R12                           STANDARD H/K
         ST    13,SAVE+4                          STANDARD H/K
         LA    R11,SAVE                           STANDARD H/K
         ST    R11,8(R13)                         STANDARD H/K
         LR    R13,R11                            STANDARD H/K
         EJECT
*
* REMARKS
*
* MAY BE USED BY A CALLING PROGRAM TO SEARCH FOR IF/AND/NOT LOGICAL
* SEARCHES. PARM MUST BE AS FOLLOWS:-
*
* OP-CODE  :  CHAR 001, ON ENTRY 'F', RESET TO 'N'
* TARGET   :  CHAR 256, DATA TO BE SEARCHED
* IF-MASK  :  CHAR 078, IF 'DATA-STRING' MASK
* AND-MASK :  CHAR 078, AN 'DATA-STRING' MASK
* NOT-MASK :  CHAR 078, NO 'DATA-STRING' MASK
*
* RETURN-CODES
*
* 0  : SEARCH SUCCESSFUL
* 4  : SEARCH NOT SUCCESSFUL
* 12 : NO DELIMT CHARACTER FOUND FOR IF MASK
* 16 : NO TARGET DATA SUPPLIED
*
* OP-CODE IS USED TO ENSURE THAT QWKF DOES THE MINIMUM AMOUNT OF WORK,
* THE CALLING PROGRAM SHOULD NOT INTERFERE WITH IT AFTER IT HAS BEEN
* RESET BY QWKF.
*
* ONLY TARGET-DATA AND IF-MASK ARE REQUIRED BY QWKF
*
* ------------------------------ *
* INSTRUCTIONS AFTER THIS POINT  *
* ------------------------------ *
*
MAIN0000 EQU   *                                  MAIN PROC SECTION
         BAL   R9,SUB0000                         BAL TO SUB-SECTION
*
MAIN0100 EQU   *                                  MAIN PROC SECTION
         BAL   R9,SUB0100                         BAL TO SUB-SECTION
*
         LA    R15,0                              SET RETURN-CODE
         CLC   MASK(03),=C'YYN'                   CHECK MASK
         BE    END#                               OK, GO END
         LA    R15,4                              RESET RC TO 04
*
END#     L     R13,SAVE+4                         RESTORE CALLERS AREA
         RETURN (14,12),RC=(15)                   AND RETURN TO CALLER
*
SUB0000  L     R10,0(R1)                          ADDRESS PARM
         ST    R10,PARMADDR                       AND SAVE ADDRESS
         MVC   D#D(256),1(R10)                    SHIFT TARGET DATA
         MVC   OP(1),0(R10)                       AND SAVE 1ST BYTE
         MVI   OP,C'F'                            AND SAVE 1ST BYTE
         MVC   MASK(03),=C'NNY'                   INITIALISE MASK
         PACK  DOUBLE(8),491(8,R10)
         CVB   R3,DOUBLE
*        LH    R3,=H'255'                         AND SET REV-COUNTER
SUB0005  LA    R2,D#D                             ADDRESS TARGET DATA
         AR    R2,R3                              INCREMENT ADDRESS
         CLI   0(R2),C' '                         SPACES ?
         BNE   SUB0010                            NO, DATA LOCATED
         BCT   R3,SUB0005                         DECREMENT AND LOOP
         LA    R15,16                             NO DATA
         L     R13,SAVE+4                         RESTORE CALLERS AREA
         RETURN (14,12),RC=(15)                   AND RETURN TO CALLER
SUB0010  AH    R3,=H'1'                           INCREMENT COUNTER
         STH   R3,D#L                             AND SAVE DATA LENGTH
         MVC   INDX(02),=X'0003'                  INITIALISE INDEX
         CLI   OP,C'F'                            OP-CODE 'F' (FIRST)
         BE    SUB0011                            YES, GO PROCESS
         BR    R9                                 NO, BRANCH BACK
SUB0011  MVC   I#D(78),257(R10)                   SHIFT IF  DATA MASK
         MVC   A#D(78),335(R10)                   SHIFT AND DATA MASK
         MVC   N#D(78),413(R10)                   SHIFT NOT DATA MASK
         MVI   0(R10),C'N'                        RESET OP-CODE
SUB0015  LH    R3,INDX                            LOAD INDEX
         SH    R3,=H'1'                           DECREMENT
         STH   R3,INDX                            AND SAVE
         CH    R3,=H'0'                           COMPARE TO ZERO
         BNL   SUB0020                            NOT LOW, GO PROCESS
         BR    R9                                 BRANCH BACK
SUB0020  LH    R3,INDX                            LOAD INDEX
         MH    R3,=H'80'                          MULTIPLY BY OFFSET
         LA    R2,I#L                             ADDRESS IF DATA LEN
         AR    R2,R3                              AND INCREMENT ADDRESS
         LH    R3,=H'77'                          INITIALISE COUNTER
SUB0025  LR    R4,R2                              COPY REGISTER 2
         LA    R4,2(R4)                           OFFSET TO DATA
         AR    R4,R3                              INCREMENT ADDRESS
         CLI   0(R4),C'<'                         DELIMIT CHARACTER ?
         BE    SUB0030                            YES, GO PROCESS
         BCT   R3,SUB0025                         DECREMENT AND LOOP
         LH    R3,INDX                            LOAD INDEX
         CH    R3,=H'0'                           ZERO ?
         BNE   SUB0015                            NO, SO ALL OK
         LA    R15,12                             NO IF DATA SUPPLIED
         L     R13,SAVE+4                         RESTORE CALLERS AREA
         RETURN (14,12),RC=(15)                   AND RETURN TO CALLER
SUB0030  STH   R3,0(R2)                           SAVE DATA LENGTH
         B     SUB0015                            PROCESS NEXT ENTRY
SUB0100  MVC   INDX(02),=X'0003'                  INITIALISE INDEX
SUB0105  LH    R3,INDX                            LOAD INDEX
         SH    R3,=H'1'                           DECREMENT
         STH   R3,INDX                            SAVE
         CH    R3,=H'0'                           COMPARE TO ZERO
         BNL   SUB0110                            BRANCH ON NOT-LOW
         BR    R9                                 RETURN
SUB0110  MH    R3,=H'80'                          MULTIPLY BY OFFSET
         LA    R2,I#L                             ADDRESS 1ST LEN ADDR
         AR    R2,R3                              AND INCREMENT ADDRESS
         CLC   0(2,R2),=X'0000'                   EQUAL TO ZEROS ?
         BNE   SUB0115                            NO, GO PROCESS
         LH    R3,INDX                            LOAD INDEX
         MH    R3,=H'1'                           MULTIPLY BY OFFSET
         LA    R2,MASK                            ADDRESS MASK
         AR    R2,R3                              INCREMENT ADDRESS
         MVI   0(R2),C'Y'                         AND INSERT MASK-CHAR
         LH    R3,INDX                            LOAD INDEX
         CH    R3,=H'2'                           NOT DATA ?
         BNE   SUB0105                            NO, ALL OK
         MVI   0(R2),C'N'                         INSERT NOT CHAR
         B     SUB0105                            PROCESS NEXT ENTRY
SUB0115  LH    R4,0(R2)                           LOAD DATA LENGTH
         CH    R4,D#L                             COMPARE TO TARGET
         BL    SUB0120                            LOW, ALL OK
         LH    R3,INDX                            LOAD INDEX
         CH    R3,=H'2'                           EQUAL TO NOT DATA
         BE    SUB0116                            YES
         BR    R9                                 GIVE UP
SUB0116  MVC   MASK+02(01),=C'N'                  INSERT MASK CHAR
         B     SUB0105                            PROCESS NEXT ENTRY
SUB0120  LH    R5,D#L                             LOAD DATA LENGTH
         SR    R5,R4                              CALC MAX COUNT
         LH    R3,=H'0'                           INITIALISE COUNTER
         LA    R2,2(R2)                           ADDRESS DATA
         SH    R4,=H'1'                           DECREMENT FOR EX
SUB0125  LA    R6,D#D                             ADDRESS TARGET DATA
         AR    R6,R3                              INCREMENT ADDRESS
         EX    R4,DATACLC                         RUN CLC INSTRUCTION
         BE    SUB0135                            AHA, DATA FOUND
         AH    R3,=H'1'                           INCREMENT COUNTER
         CR    R3,R5                              COMPARE TO MAX
         BNH   SUB0125                            NOT HIGH, RE-LOOP
         LH    R3,INDX                            LOAD INDEX
         CH    R3,=H'2'                           NOT DATA ?
         BE    SUB0130                            YES, BRANCH
         BR    R9                                 GIVE UP
SUB0130  MVC   MASK+02(1),=C'N'                   SHIFT MASK-CHAR
         B     SUB0105                            PROCESS NEXT ENTRY
SUB0135  LH    R3,INDX                            LOAD INDEX
         CH    R3,=H'2'                           NOT DATA ?
         BNE   SUB0140                            NO
         MVC   MASK+02(1),=C'Y'                   SHIFT MASK-CHAR
         BR    R9                                 AND GIVE UP
SUB0140  MH    R3,=H'1'                           MULTIPLY BY OFFSET
         LA    R2,MASK                            ADDRESS MASK
         AR    R2,R3                              INCREMENT ADDRESS
         MVI   0(R2),C'Y'                         SHIFT MASK-CHAR
         B     SUB0105                            PROCESS NEXT ENTRY
*
         LTORG
SAVE     DS    9D                                 CALLERS AREA
PARMADDR DS    F                                  PARM ADDRESS
*
         DS    0D
DOUBLE   DS    D
*
DATACLC  CLC   0(0,R6),0(R2)                      USED VIA EX
*
         DS    0H                                 ALIGN
INDX     DS    XL2                                INDEX
MASK     DS    CL3                                MASK
OP       DC    CL1'F'                             OP-CODE
*
         DS    0H                                 ALIGN
D#L      DC    XL2'0000'                          TARGET LENGTH
D#D      DS    CL256                              TARGET DATA
I#L      DC    XL2'0000'                          IF     LENGTH
I#D      DS    CL78                               IF     DATA
A#L      DC    XL2'0000'                          AND    LENGTH
A#D      DS    CL78                               AND    DATA
N#L      DC    XL2'0000'                          NOT    LENGTH
N#D      DS    CL78                               NOT    DATA
*
         END
